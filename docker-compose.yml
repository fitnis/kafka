version: "3.9"

services:
  api-gateway:
    build:
      context: .
      dockerfile: ./api-gateway/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKER: kafka:19092

  sample-service:
    build:
      context: .
      dockerfile: ./sample-service/Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
    ports: ["8081:8080"]
    volumes:
      - ./fitnis.db:/app/fitnis.db
    environment:
      KAFKA_BROKER: kafka:19092

  examination-service:
    build:
      context: .
      dockerfile: ./examination-service/Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
    ports: ["8083:8080"]
    volumes:
      - ./fitnis.db:/app/fitnis.db
    environment:
      KAFKA_BROKER: kafka:19092

  patient-service:
    build:
      context: .
      dockerfile: ./patient-service/Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
    ports: ["8082:8080"]
    volumes:
      - ./fitnis.db:/app/fitnis.db
    environment:
      KAFKA_BROKER: kafka:19092

  prescription-service:
    build:
      context: .
      dockerfile: ./prescription-service/Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
    ports: ["8086:8080"]
    volumes:
      - ./fitnis.db:/app/fitnis.db
    environment:
      KAFKA_BROKER: kafka:19092

  referral-service:
    build:
      context: .
      dockerfile: ./referral-service/Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
    ports: ["8087:8080"]
    volumes:
      - ./fitnis.db:/app/fitnis.db
    environment:
      KAFKA_BROKER: kafka:19092

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 5s
      timeout: 10s
      retries: 3

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,INTERNAL://0.0.0.0:19092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,INTERNAL://kafka:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CREATE_TOPICS: "patient-requests:1:1,patient-responses:1:1,prescription-requests:1:1,prescription-responses:1:1,referral-requests:1:1,referral-responses:1:1,examination-requests:1:1,examination-responses:1:1,sample-requests:1:1,sample-responses:1:1"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 5s
      timeout: 10s
      retries: 3

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8088:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:19092
      SERVER_PORT: 8080
